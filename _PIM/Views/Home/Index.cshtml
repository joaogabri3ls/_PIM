@model IEnumerable<_PIM.Models.ProdutoModel>
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isAdmin = User.IsInRole("Admin");
}

@section Styles {
    <link rel="stylesheet" href="~/css/home.css" />
}

<header>
    <div class="logo">
        <h1>Cultivarte</h1>
    </div>
    <div class="rightContent">
        @if (isAdmin)
        {
            <a class="LinkDash" asp-controller="Admin" asp-action="Index" style="background: white; color: #353535" ;>Dashboard</a>
        }
        <div class="cart" onclick="abrirCarrinho()">
            <i class="bi bi-bag-fill"></i>
            <span id="cartCount">0</span> 
        </div>

        <div class="account" onclick="toggleMenu()">
            <i class="bi bi-person-circle"></i>
            <div id="user-menu" class="menu hidden">
                <a href="/Compras">Visualizar Compras</a>
                <a href="javascript:logout()">Sair da Conta</a>
            </div>
        </div>
    </div>
</header>

<div id="cartMenu" class="cartMenu">
    <a href="javascript:void(0)" class="closeBtn" onclick="fecharCarrinho()">&times;</a>
    <h2>Carrinho</h2>
    <ul id="cartItems"></ul>
    <div id="cartFooter" class="cartFooter">
        <span id="totalCart" class="totalDisplay">Total: R$ 0.00</span>
        <a href="javascript:void(0)" onclick="finalizarCompra()" class="finalizeButton">Finalizar Compra</a>
    </div>
</div>

<div class="productContainer">
    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            <div class="productCard">
                <img src="@item.UrlImagem" alt="@item.Nome" class="productImage" />
                <h2>@item.Nome</h2>
                <p>Preço: R$ @item.Preco</p>
                <button class="buyButton" onclick="adicionarAoCarrinho('@item.Id', '@item.Nome', @item.Preco)">Comprar</button>
            </div>
        }
    }
    else
    {
        <p>Nenhum produto encontrado.</p>
    }
</div>

<script>
    let carrinho = [];
    let totalItensCarrinho = 0;

    function toggleCart() {
        const cartSidebar = document.getElementById('cartSidebar');
        cartSidebar.classList.toggle('active');
    }

    function adicionarAoCarrinho(produtoId, nomeProduto, precoProduto, imagemUrl) {
        precoProduto = parseFloat(precoProduto);


        let produtoExistente = carrinho.find(item => item.produtoId === produtoId);

        if (produtoExistente) {
            produtoExistente.quantidade++;
        } else {
            carrinho.push({ produtoId, nomeProduto, precoProduto, quantidade: 1, imagemUrl });
        }

        totalItensCarrinho = carrinho.length;
        document.querySelector('.cart span').textContent = totalItensCarrinho;
        atualizarCarrinho();
        localStorage.setItem('carrinho', JSON.stringify(carrinho));
        alert('Produto "' + nomeProduto + '" adicionado ao carrinho.');
    }

    function atualizarCarrinho() {
        let cartItems = document.getElementById('cartItems');
        cartItems.innerHTML = '';  // Limpar o conteúdo da lista

        carrinho.forEach(item => {
            let li = document.createElement('li');
            li.classList.add('cartItem');

            // Botão de remoção
            let removeBtn = document.createElement('button');
            removeBtn.classList.add('removeBtn');
            removeBtn.textContent = 'X';
            removeBtn.onclick = () => removerDoCarrinho(item.produtoId);
            li.appendChild(removeBtn);

            // Imagem do produto
            let img = document.createElement('img');
            img.classList.add('productImg');
            img.src = item.imagemUrl;
            li.appendChild(img);

            // Nome do produto
            let nome = document.createElement('span');
            nome.classList.add('productName');
            nome.textContent = item.nomeProduto;
            li.appendChild(nome);

            // Container de quantidade
            let qtdDiv = document.createElement('div');
            qtdDiv.classList.add('quantityContainer');

            // Botão de diminuir a quantidade
            let btnMenos = document.createElement('button');
            btnMenos.classList.add('quantityButton');
            btnMenos.textContent = '-';
            btnMenos.onclick = () => alterarQuantidade(item.produtoId, -1);
            qtdDiv.appendChild(btnMenos);

            // Exibição da quantidade
            let qtd = document.createElement('span');
            qtd.classList.add('quantityDisplay');
            qtd.textContent = item.quantidade;
            qtdDiv.appendChild(qtd);

            // Botão de aumentar a quantidade
            let btnMais = document.createElement('button');
            btnMais.classList.add('quantityButton');
            btnMais.textContent = '+';
            btnMais.onclick = () => alterarQuantidade(item.produtoId, 1);
            qtdDiv.appendChild(btnMais);

            li.appendChild(qtdDiv);

            // Exibição do preço
            let preco = document.createElement('span');
            preco.classList.add('priceDisplay');
            preco.textContent = 'R$ ' + item.precoProduto.toFixed(2);
            li.appendChild(preco);

            cartItems.appendChild(li);
        });

        calcularTotalCarrinho();
    }

    function alterarQuantidade(produtoId, quantidadeAlterada) {
        let item = carrinho.find(item => item.produtoId === produtoId);

        if (item) {
            item.quantidade = Math.max(1, item.quantidade + quantidadeAlterada);
        }

        atualizarCarrinho();

        localStorage.setItem('carrinho', JSON.stringify(carrinho));
    }

    function calcularTotalCarrinho() {
        let total = 0;

        carrinho.forEach(item => {
            total += item.precoProduto * item.quantidade;
        });

        let totalDiv = document.getElementById('totalCart');
        totalDiv.textContent = 'Total: R$ ' + total.toFixed(2);
    }

    function removerDoCarrinho(produtoId) {
        carrinho = carrinho.filter(item => item.produtoId !== produtoId);
        totalItensCarrinho = carrinho.length;
        document.querySelector('.cart span').textContent = totalItensCarrinho;
        atualizarCarrinho();
        localStorage.setItem('carrinho', JSON.stringify(carrinho));
    }

    function finalizarCompra() {
        if (carrinho.length === 0) {
            alert('O carrinho está vazio.');
            return;
        }

        fetch('/Carrinho/Pagamento', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(carrinho)
        })
            .then(response => {
                if (response.ok) {
                    window.location.href = '/Pagamento/Index';
                } else {
                    console.error('Erro ao salvar carrinho:', response.statusText);
                    alert('Ocorreu um erro ao finalizar a compra.');
                }
            })
            .catch(error => {
                console.error('Erro ao salvar carrinho:', error);
                alert('Ocorreu um erro ao finalizar a compra.');
            });
    }

    window.onload = function () {
        let carrinhoSalvo = localStorage.getItem('carrinho');
        if (carrinhoSalvo) {
            carrinho = JSON.parse(carrinhoSalvo);
            totalItensCarrinho = carrinho.length;
            document.querySelector('.cart span').textContent = totalItensCarrinho;
            atualizarCarrinho();
        }
    };

    function abrirCarrinho() {
        document.getElementById('cartMenu').style.width = "450px";
    }

    function fecharCarrinho() {
        document.getElementById('cartMenu').style.width = "0";
    }


    function toggleMenu() {
        const menu = document.getElementById('user-menu');
        menu.classList.toggle('hidden');
    }

    function logout() {
        // Lógica para logout será configurada no backend
        fetch('/Account/Logout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        })
        .then(response => {
            if (response.ok) {
                window.location.href = '/';
            } else {
                alert('Erro ao sair da conta');
            }
        })
        .catch(err => console.error(err));
    }
</script>



